name: Publish net-value images to GHCR

on:
  push:
    branches: [ main ]
    tags: [ 'v*', 'v*.*', 'v*.*.*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}/horizcoin

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: net-observer
            context: .
            dockerfile: services/net-observer/Dockerfile
            image: net-observer
          - name: data-monetizer-api
            context: .
            dockerfile: services/data-monetizer-api/Dockerfile
            image: data-monetizer-api

    steps:
      - uses: actions/checkout@v4

      - name: Check Dockerfile exists
        id: check
        shell: bash
        run: |
          if [ ! -f "${{ matrix.dockerfile }}" ]; then
            echo "skip=true" >> "$GITHUB_OUTPUT"
          else
            echo "skip=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up QEMU
        if: steps.check.outputs.skip != 'true'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: steps.check.outputs.skip != 'true'
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        if: steps.check.outputs.skip != 'true' && github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        if: steps.check.outputs.skip != 'true'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.image }}
          tags: |
            type=raw,value=edge,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=sha-${{ github.sha }},enable=${{ github.ref == 'refs/heads/main' }}
            type=ref,event=tag
            type=raw,value=pr-${{ github.event.number }},enable=${{ github.event_name == 'pull_request' }}

      - name: Build and push (multi-arch)
        if: steps.check.outputs.skip != 'true'
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true
          sbom: true

      - name: Install Cosign
        if: steps.check.outputs.skip != 'true' && github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/')
        uses: sigstore/cosign-installer@v3

      - name: Sign image with Cosign (keyless OIDC)
        if: steps.check.outputs.skip != 'true' && github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/')
        env:
          COSIGN_EXPERIMENTAL: "true"
          IMAGE: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.image }}@${{ steps.build.outputs.digest }}
        run: cosign sign --yes "$IMAGE"
